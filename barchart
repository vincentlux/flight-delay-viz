<!DOCTYPE html>
<html>
<head>
    <title>Flight Delay Heatmap</title>
    <script src="https://d3js.org/d3.v5.min.js" charset="utf-8"></script>
    <script src="legend.js"></script>
    <style>

        rect.bordered {
            stroke: darkgray;
            stroke-width:2px;   
        }

    </style>
</head>

<body onload="legendDemo()">

<h1>Flight Delay Heatmap</h1>
<div id="heatmap"></div>
<div id="legend"></div>
<div id="barchart"></div>
    <script type="text/javascript">


        // References
        // http://bl.ocks.org/PBrockmann/raw/635179ff33f17d2d75c2/
        // http://bl.ocks.org/tjdecke/raw/5558084/

        // ===============================================================
        // Define initial tooltip.
        var tooltip = d3.select(origin)
            .append("div")
            .style("position", "absolute")
            .style("visibility", "hidden");


        // Define TEST data array.

        var days = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
        var hours = ["00", "01", "02", "03", "04", "05", "06", "07",
                    "08", "09", "10", "11", "12", "13", "14", "15",
                    "16", "17", "18", "19", "20", "21", "22", "23"];

        // Define TEST data array.
        var data = [
            {DayOfWeek:2, Origin: "CLT", Dest: "PHX", CRSDepTime: "1619", DepDelay: -3.0, UniqueCarrier: "AA"},
            {DayOfWeek:2, Origin: "CLT", Dest: "PHX", CRSDepTime: "204", DepDelay: 0.0, UniqueCarrier: "UA"},
            {DayOfWeek:2, Origin: "CLT", Dest: "PHX", CRSDepTime: "1", DepDelay: 5.0, UniqueCarrier: "Delta"},
            {DayOfWeek:3, Origin: "CLT", Dest: "PHX", CRSDepTime: "1619", DepDelay: -10.0, UniqueCarrier: "AA"},
            {DayOfWeek:3, Origin: "CLT", Dest: "PHX", CRSDepTime: "1619", DepDelay: 20.0, UniqueCarrier: "UA"},
            {DayOfWeek:3, Origin: "CLT", Dest: "PHX", CRSDepTime: "1619", DepDelay: 24.0, UniqueCarrier: "Delta"},
            {DayOfWeek:3, Origin: "CLT", Dest: "PHX", CRSDepTime: "1619", DepDelay: 7.0, UniqueCarrier: "Delta"},
            {DayOfWeek:4, Origin: "CLT", Dest: "PHX", CRSDepTime: "2359", DepDelay: 10.0, UniqueCarrier: "AA"},
            {DayOfWeek:4, Origin: "CLT", Dest: "PHX", CRSDepTime: "1820", DepDelay: 35.0, UniqueCarrier: "UA"},
            {DayOfWeek:4, Origin: "CLT", Dest: "PHX", CRSDepTime: "830", DepDelay: 2.0, UniqueCarrier: "Delta"},
            {DayOfWeek:4, Origin: "CLT", Dest: "PHX", CRSDepTime: "2250", DepDelay: -8.0, UniqueCarrier: "Delta"},
            {DayOfWeek:4, Origin: "CLT", Dest: "PHX", CRSDepTime: "0655", DepDelay: 9.0, UniqueCarrier: "AA"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 52.0, UniqueCarrier: "AA"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 1.0, UniqueCarrier: "UA"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: -2.0, UniqueCarrier: "Delta"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 8.0, UniqueCarrier: "AA"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 36.0, UniqueCarrier: "AA"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 17.0, UniqueCarrier: "Delta"},
            {DayOfWeek:5, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 28.0, UniqueCarrier: "UA"},
            {DayOfWeek:6, Origin: "CLT", Dest: "PHX", CRSDepTime: "1815", DepDelay: 0.0, UniqueCarrier: "AA"},
            {DayOfWeek:6, Origin: "CLT", Dest: "PHX", CRSDepTime: "1900", DepDelay: 8.0, UniqueCarrier: "UA"},
            {DayOfWeek:7, Origin: "CLT", Dest: "PHX", CRSDepTime: "1440", DepDelay: 90.0, UniqueCarrier: "AA"},
            {DayOfWeek:7, Origin: "CLT", Dest: "PHX", CRSDepTime: "1440", DepDelay: 48.0, UniqueCarrier: "UA"},
            {DayOfWeek:7, Origin: "CLT", Dest: "PHX", CRSDepTime: "1540", DepDelay: 33.0, UniqueCarrier: "Delta"},
            {DayOfWeek:7, Origin: "CLT", Dest: "PHX", CRSDepTime: "1540", DepDelay: 9.0, UniqueCarrier: "Delta"},
            {DayOfWeek:1, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: -12.0, UniqueCarrier: "AA"},
            {DayOfWeek:1, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 0.0, UniqueCarrier: "UA"},
            {DayOfWeek:1, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 26.0, UniqueCarrier: "Delta"},
            {DayOfWeek:1, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: 6.0, UniqueCarrier: "Delta"},
            {DayOfWeek:1, Origin: "CLT", Dest: "PHX", CRSDepTime: "1230", DepDelay: -1.0, UniqueCarrier: "AA"}
        ];

      




        var height = 500;
        var width = 500;
        var margin = 40;

        var arrayNestedTwo = d3.nest()
            .key(function(d) {return d.DayOfWeek;})
            .key(function(d) {return d.UniqueCarrier;})
            .rollup(function(d) {return d3.mean(d, function(s) {return s.DepDelay;});})
            .entries(data)
            .map(function(subgroup) {
                return {
                    DayOfWeek: subgroup.key,
                    Carriers: subgroup.values.map(function (d) {
                        return {Carriers: d.key,
                            avgAirDelay: d.value}
                    })
                }
            });

        var flattenedTwo = [];
        arrayNestedTwo.forEach(function(day) {
            day.Carriers.forEach(function(UniqueCarrier) {
                flattened.push({
                    DayOfWeek: day.DayOfWeek,
                    Carriers: Carriers.Carriers,
                    avgAirDelay: Carriers.avgAirDelay
                });
            });
        });



        // input should be flattened
        flattenedTwo.forEach(function(d) {
            DayOfWeek = +d.DayOfWeek,
                Carriers = +d.Carriers,
                avgAirDelay = +d.avgAirDelay
        });

        var x = d3.scalePoint()
            .domain(data.map(function (d) {return d.UniqueCarrier}))
            .range([0 + margin, width - margin]);

        // Life expectancy values all fall between 70 and 90.
        var y = d3.scaleLinear()
            .domain([0,d3.max(d.avgAirDelay)])
            .range([margin,height-margin]);

        // Define a color scale.
        var region_color = d3.scaleOrdinal(d3.schemeCategory10);

        // This variable is used to store a reference to the SVG element for the visualization.
        var svg;


            // Create the SVG canvas that will be used to render the visualization.
         var svg = d3.select("#barchart")
                .append("svg")
                .attr("width", width)
                .attr("height", height);

            // Add axes.  First the X axis and label.
             svg.append("g")
                .attr("class", "axis")
                .attr("transform", "translate(0,"+(500-margin)+")")
                .call(d3.axisBottom(x));


             svg.append("text")
                .attr("class", "axis-label")
                .attr("y", 495)
                .attr("x",0 + (500 / 2))
                .style("text-anchor", "middle")
                .text("Unique Carrier");

            // Now the Y axis and label.
             svg.append("g")
                .attr("class", "axis")
                .attr("transform", "translate("+margin+",0)")
                .call(d3.axisLeft(y));

             svg.append("text")
                .attr("transform", "rotate(90)")
                .attr("class", "axis-label")
                .attr("y", -5)
                .attr("x",0 + (500 / 2))
                .style("text-anchor", "middle")
                .text("Average Delay Time");

             svg.selectAll("bar")
                 .data(data)
                 //not data, but arrayed nest??
                 .enter().append("rect")
                 .attr("class", "bar")
                 //.style("fill", "steel blue")
                 .attr("x", function (d) {return x(d.UniqueCarrier);})
                 .attr("width", x.bandwidth())
                 .attr("y", function (d) {return y(d.avgAirDelay);})
                 .attr("height", function(d) { return height - y(d.avgAirDelay); });







    </script>

<script>



 </script>

</body>
</html>
